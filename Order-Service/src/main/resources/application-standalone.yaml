server:
  port: 8081

spring:
  kafka:
    bootstrap-servers: localhost:9092
    listener:
      ack-mode: record
      retry:
        enabled: true
        max-attempts: 3
      missing-topics-fatal: false
    consumer:
      group-id: order-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.example.User_Service.kafka
        spring.json.value.default.type: com.example.User_Service.kafka.UserCreatedEvent
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: user-events
    dlq:
      enabled: true

  boot:
    admin:
      client:
        enabled: true
        instance:
          service-host-type: ip
        url: http://localhost:8085

  datasource:
    url: jdbc:postgresql://localhost:5432/product
    username: product
    password: product
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
