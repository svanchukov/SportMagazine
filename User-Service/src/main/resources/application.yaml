server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/product
    username: product
    password: product
    driver-class-name: org.postgresql.Driver
  application:
    name:
      user-service

eureka:
  client:
    register-with-eureka: true  # Ставим true, чтобы сервис регистрировался в Eureka
    fetch-registry: true         # Убираем false, чтобы сервис мог получать информацию о других сервисах
    service-url:
      defaultZone: http://localhost:8761/eureka/  # Указываем URL Eureka сервера
      instance:
        prefer-ip-address: true


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration

  kafka:
    bootstrap-servers: localhost:9092

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"  # Разрешаем десериализацию любых пакетов
